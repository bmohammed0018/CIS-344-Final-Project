CREATE DATABASE restaurant_reservations;

USE restaurant_reservations;



CREATE TABLE Customers (
    customerId INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    customerName VARCHAR(45) NOT NULL,
    contactInfo VARCHAR(200)
);

CREATE TABLE Reservations (
    reservationId INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    customerId INT NOT NULL,
    reservationTime DATETIME NOT NULL,
    numberOfGuests INT NOT NULL,
    specialRequests VARCHAR(200),
    FOREIGN KEY (customerId) REFERENCES Customers(customerId)
);

CREATE TABLE DiningPreferences (
    preferenceId INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    customerId INT NOT NULL,
    favoriteTable VARCHAR(45),
    dietaryRestrictions VARCHAR(200),
    FOREIGN KEY (customerId) REFERENCES Customers(customerId)
);



DELIMITER //

CREATE PROCEDURE findReservations(IN customer_id INT)
BEGIN
    SELECT * FROM Reservations WHERE customerId = customer_id;
END //

CREATE PROCEDURE addSpecialRequest(IN reservation_id INT, IN requests VARCHAR(200))
BEGIN
    UPDATE Reservations SET specialRequests = requests WHERE reservationId = reservation_id;
END //

CREATE PROCEDURE addReservation(IN customer_id INT, IN reservation_time DATETIME, IN number_of_guests INT, IN special_requests VARCHAR(200))
BEGIN
    DECLARE existing_customer INT;
    SELECT customerId INTO existing_customer FROM Customers WHERE customerId = customer_id;
    IF existing_customer IS NULL THEN
        INSERT INTO Customers (customerId, customerName) VALUES (customer_id, 'New Customer');
    END IF;
    INSERT INTO Reservations (customerId, reservationTime, numberOfGuests, specialRequests) VALUES (customer_id, reservation_time, number_of_guests, special_requests);
END //

DELIMITER ;
